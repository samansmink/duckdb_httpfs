name: Minio Testing
on:
  workflow_call:
    inputs:
      # DuckDB version to build against
      duckdb_version:
        required: true
        type: string
      vcpkg_commit:
        required: false
        type: string
        default: a42af01b72c28a8e1d7b48107b33e4f286a55ef6

jobs:
  linux-httpfs:
    name: Linux HTTPFS
    if: ${{ !startsWith(github.ref, 'refs/tags/v') }}
    runs-on: ubuntu-20.04
    env:
      VCPKG_TARGET_TRIPLET: x64-linux
      VCPKG_TOOLCHAIN_PATH: ${{ github.workspace }}/vcpkg/scripts/buildsystems/vcpkg.cmake
      DUCKDB_EXTENSION_CONFIGS: ${{ github.workspace }}/.github/config/test_extensions.cmake
      S3_TEST_SERVER_AVAILABLE: 1
      AWS_DEFAULT_REGION: eu-west-1
      AWS_ACCESS_KEY_ID: minio_duckdb_user
      AWS_SECRET_ACCESS_KEY: minio_duckdb_user_password
      DUCKDB_S3_ENDPOINT: duckdb-minio.com:9000
      DUCKDB_S3_USE_SSL: false
      GEN: ninja

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          submodules: 'true'

      - name: Checkout DuckDB to version
        run: |
          cd duckdb
          git checkout ${{ inputs.duckdb_version }}

      - uses: actions/setup-python@v4
        with:
          python-version: '3.7'

      - name: Install Ninja
        shell: bash
        run: sudo apt-get update -y -qq && sudo apt-get install -y -qq ninja-build

      - name: Setup Ccache
        uses: hendrikmuhs/ccache-action@main
        with:
          key: ${{ github.job }}

      - name: Setup vcpkg
        uses: lukka/run-vcpkg@v11
        with:
          vcpkgGitCommitId: ${{ inputs.vcpkg_commit }}

      - name: Build
        shell: bash
        run: make

      - name: Start S3/HTTP test server
        shell: bash
        run: |
          sudo ./scripts/install_s3_test_server.sh
          ./scripts/generate_presigned_url.sh
          source ./scripts/run_s3_test_server.sh
          sleep 60

      - name: Test
        shell: bash
        run: |
          make test